@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

        <ul class="navbar-nav">
            @if (SignInManager.IsSignedIn(User))
            {
                <li class="nav-item">
                    @{
                        var currentUser = await UserManager.GetUserAsync(User);
                        var name = currentUser?.Name;
                    }
                        <a id="manage"   class="btn btn-outline-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                            <i class="bi bi-person-circle"></i> Manage account
                        </a>

                </li>
                <li class="nav-item">
                    <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                        <button id="logout" type="submit" class=" btn btn-outline-danger border-0">
                            <i class="bi bi-box-arrow-right"></i> Logout
                        </button>
                    </form>
                </li>
            }
            else
            {
                <li class="nav-item">
                    <a class="nav-link text-secondary" id="register" asp-area="Identity" asp-page="/Account/Register">
                        <i class="bi bi-person-plus"></i> Register
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link text-secondary" id="login" asp-area="Identity" asp-page="/Account/Login">
                        <i class="bi bi-box-arrow-in-right"></i> Login
                    </a>
                </li>
            }
        </ul>